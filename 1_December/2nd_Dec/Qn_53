-------------------------Question Link----------------
https://leetcode.com/problems/maximum-subarray/

------------ Java Code--------------------
#BRUTE (TLE)
class Solution {
    public int maxSubArray(int[] arr) {
        int n = arr.length;
        int maxSum = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            int sum = 0;
            for (int j = i; j < n; j++) {
                sum = sum + arr[j];
                maxSum = Math.max(sum, maxSum);
            }
        }
        return maxSum;
    }
}

#OPTIMIZED
class Solution {
    public int maxSubArray(int[] arr) {
        int n = arr.length;
         int sum = 0;
        int maxSum = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
           sum = sum + arr[i];
           maxSum = Math.max(sum, maxSum);
           if(sum<0){
            sum = 0;
           } 
        }
        return maxSum;
    }
}
