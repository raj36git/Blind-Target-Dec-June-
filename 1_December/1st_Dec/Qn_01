----------------------Question Link------------------
https://leetcode.com/problems/two-sum/description/

------------------Java Code---------------------

// #BRUTE
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int n = nums.length;
        int[] ans = new int[2];

        for(int i=0; i<n-1; i++){
            for(int j=i+1; j<n; j++){
                if(nums[i] + nums[j] == target){
                    ans[0] = i;
                    ans[1] = j;
                }
            }
        }
        return ans;
    }
}

// #OPTIMIZED
class Solution {
    public int[] twoSum(int[] nums, int target) {

        HashMap<Integer, Integer> map = new HashMap<>();
        int n = nums.length;
        int[] ans = new int[2];

        for(int i=0; i<n; i++){
            int val = nums[i];
            int need = target-val;
            if(map.containsKey(need)){
                int need_idx = map.get(need);
                return new int[]{i, need_idx};
            }else{
                map.put(val,i);
            }
        }
        return ans;
    }
}
